{"majorversion": 3, "classmap": {"YUI~event-konami": {"name": "YUI~event-konami", "namespace": "", "module": "event-konami", "file": "konami.js", "shortname": "YUI~event-konami", "events": {"konami": {"return": "{Event.Handle} the detach handle", "params": [{"type": "String", "name": "type", "description": "  'konami'"}, {"type": "Function", "name": "fn", "description": "  the callback function"}, {"type": "String|Node|etc", "name": "id", "description": "  the element to bind (typically document)"}, {"type": "Object", "name": "o", "description": "  optional context object"}, {"type": "", "name": "args", "description": " 0..n additional arguments that should be provided \nto the listener."}], "description": "Provides a subscribable event named &quot;konami&quot;.", "guessedname": "progress", "guessedtype": "property"}}, "description": "Based on the Konami code (http://en.wikipedia.org/wiki/Konami_Code).\nSubscribers to this event should do something special.  The event will be\nfired only once for each subscriber.  With great power comes great\nresponsibility, after all."}}, "version": "3", "modules": {"event-konami": {"description": "Based on the Konami code (http://en.wikipedia.org/wiki/Konami_Code).\nSubscribers to this event should do something special.  The event will be\nfired only once for each subscriber.  With great power comes great\nresponsibility, after all.", "submodules": [], "classlist": ["YUI~event-konami"], "filelist": ["konami.js"], "subdata": {}, "name": "event-konami"}}, "filemap": {"konami.js": {"classlist": ["YUI~event-konami"], "name": "konami.js", "module": "event-konami"}}}